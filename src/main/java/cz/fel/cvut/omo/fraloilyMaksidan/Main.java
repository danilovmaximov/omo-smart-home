package cz.fel.cvut.omo.fraloilyMaksidan;

import cz.fel.cvut.omo.fraloilyMaksidan.activities.Activity;
import cz.fel.cvut.omo.fraloilyMaksidan.activities.actions.Play;
import cz.fel.cvut.omo.fraloilyMaksidan.activities.actions.RememberGoodTimes;
import cz.fel.cvut.omo.fraloilyMaksidan.activities.actions.Sleep;
import cz.fel.cvut.omo.fraloilyMaksidan.activities.appliances.ElectricBicycle;
import cz.fel.cvut.omo.fraloilyMaksidan.activities.appliances.TV;
import cz.fel.cvut.omo.fraloilyMaksidan.activities.staff.Couch;
import cz.fel.cvut.omo.fraloilyMaksidan.entities.Baby;
import cz.fel.cvut.omo.fraloilyMaksidan.entities.Father;
import cz.fel.cvut.omo.fraloilyMaksidan.entities.Grandad;
import cz.fel.cvut.omo.fraloilyMaksidan.entities.Mom;
import cz.fel.cvut.omo.fraloilyMaksidan.activities.appliances.CoffeeMaker;
import cz.fel.cvut.omo.fraloilyMaksidan.activities.staff.RepairKit;
import cz.fel.cvut.omo.fraloilyMaksidan.enums.ExistingActivities;
import cz.fel.cvut.omo.fraloilyMaksidan.house.*;
import cz.fel.cvut.omo.fraloilyMaksidan.house.floor.FloorBuilder;
import cz.fel.cvut.omo.fraloilyMaksidan.house.room.RoomBuilder;
import cz.fel.cvut.omo.fraloilyMaksidan.reports.Reports;
import cz.fel.cvut.omo.fraloilyMaksidan.reports.ReportsAPI;
import cz.fel.cvut.omo.fraloilyMaksidan.sensors.HumiditySensor;
import cz.fel.cvut.omo.fraloilyMaksidan.sensors.SunSensor;
import cz.fel.cvut.omo.fraloilyMaksidan.sensors.OxygenSensor;
import cz.fel.cvut.omo.fraloilyMaksidan.sensors.TempSensor;

import com.fasterxml.jackson.databind.ObjectMapper;

public class Main {
  private static ObjectMapper objectMapper = new ObjectMapper();

  public static void main(String[] args) {

    /*
       Configure context of application:
       Weather events, report classes...
    */
    Context.setSun(true);
    Context.setHumidityLevel(65);
    Context.setOxygenLevel(70);
    Context.setTempLevel(20);
    ReportsAPI reports = new ReportsAPI(Context.getReports());

    /* New appliances is created as separate classes... */
    Configurator.createActivityAll(
        ExistingActivities.COFFEE_MAKER, ExistingActivities.REPAIR_KIT,
        ExistingActivities.ELECTRIC_BIKE, ExistingActivities.COUCH,
        ExistingActivities.TV, ExistingActivities.BOILER);

    var father = new Father("Van Darkholme");
    var grandad = new Grandad("Billy Herrington");
    var mom = new Mom("Dungeon master");
    var babyBoy = new Baby("Slave");
    mom.addBabies(babyBoy);

    Configurator.createStandardRooms();
    Configurator.setEntitiesToRoom();

    /* Activities are passed to the person...*/
    /* Mom can respond to events generated by babies. */

    /* Builders are provided for structures of house: rooms, floors and co on... */
    var floor =
        new FloorBuilder()
            .setFloorNumber(1)
            .addRoomList(MapContext.getRoomsInHouse())
            .initRooms()
            .getResult();

    var windows = new Window();
    var lights = new Light();
    var humidifier = new Humidifier();

    /*
       Sensors are EventManagers, that are responding to context changes.
       For example, we can subscribe window for changing light level.
       Based on light level window can change its internal state...
    */
    var sunSensor = new SunSensor("LightUp", "LightDown");
    sunSensor.subscribe("LightUp", windows, lights);
    sunSensor.subscribe("LightDown", windows, lights);

    var oxygenSensor = new OxygenSensor("OxygenLow", "OxygenHigh");
    oxygenSensor.subscribe("OxygenLow", windows);
    oxygenSensor.subscribe("OxygenHigh", windows);

    var humiditySensor = new HumiditySensor("AirIsDry", "AirIsWet");
    humiditySensor.subscribe("AirIsDry", humidifier);
    humiditySensor.subscribe("AirIsWet", humidifier);

    var insideTempSensor = new TempSensor("ItsCold", "ItsWarm");
    insideTempSensor.subscribe("ItsCold", father);
    insideTempSensor.subscribe("ItsWarm", father);

    var house =
        new HouseBuilder()
            .setAddress("Street Lane 69")
            .addFloorAll(floor)
            .initFloors()
            .addSensors(sunSensor, oxygenSensor, humiditySensor, insideTempSensor)
            .getResult();

    /*
       World Class is a wrapper around house class to provide different simulations...
    */
    World w1 = new World(house);
    w1.startSimulation(50);

    /*
       Reports are used to deliver different info based on the demand;
    */

    System.out.println("=========================== Reports =========================== ");
    reports.allReportsPrint(true);
    System.out.println("=========================== Reports =========================== ");
  }
}
