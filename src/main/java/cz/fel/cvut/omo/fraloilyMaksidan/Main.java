package cz.fel.cvut.omo.fraloilyMaksidan;

import cz.fel.cvut.omo.fraloilyMaksidan.activities.actions.Play;
import cz.fel.cvut.omo.fraloilyMaksidan.activities.actions.RememberGoodTimes;
import cz.fel.cvut.omo.fraloilyMaksidan.activities.actions.Sleep;
import cz.fel.cvut.omo.fraloilyMaksidan.activities.appliances.ElectricBicycle;
import cz.fel.cvut.omo.fraloilyMaksidan.activities.appliances.TV;
import cz.fel.cvut.omo.fraloilyMaksidan.activities.staff.Couch;
import cz.fel.cvut.omo.fraloilyMaksidan.entities.Baby;
import cz.fel.cvut.omo.fraloilyMaksidan.entities.Father;
import cz.fel.cvut.omo.fraloilyMaksidan.entities.Grandad;
import cz.fel.cvut.omo.fraloilyMaksidan.entities.Mom;
import cz.fel.cvut.omo.fraloilyMaksidan.activities.appliances.CoffeeMaker;
import cz.fel.cvut.omo.fraloilyMaksidan.activities.staff.RepairKit;
import cz.fel.cvut.omo.fraloilyMaksidan.house.HouseBuilder;
import cz.fel.cvut.omo.fraloilyMaksidan.house.Humidifier;
import cz.fel.cvut.omo.fraloilyMaksidan.house.Window;
import cz.fel.cvut.omo.fraloilyMaksidan.house.Light;
import cz.fel.cvut.omo.fraloilyMaksidan.house.floor.FloorBuilder;
import cz.fel.cvut.omo.fraloilyMaksidan.house.room.RoomBuilder;
import cz.fel.cvut.omo.fraloilyMaksidan.sensors.HumiditySensor;
import cz.fel.cvut.omo.fraloilyMaksidan.sensors.SunSensor;
import cz.fel.cvut.omo.fraloilyMaksidan.sensors.OxygenSensor;
import cz.fel.cvut.omo.fraloilyMaksidan.sensors.TempSensor;

public class Main {
    public static void main(String[] args) {
        /*
            Configure context of application:
            Weather events, report classes...
         */
        Context.setLightLevel(95);
        Context.setHumidityLevel(65);
        Context.setOxygenLevel(70);
        Context.setTempLevel(20);

        /* New appliances is created as separate classes... */
        var coffee3000 = new CoffeeMaker();
        var repairKit = new RepairKit();
        var bikeRound = new ElectricBicycle(3);
        var restAtCouch = new Couch(2);
        var watchTV = new TV(3);
        var sleepBaby = new Sleep(4);
        var playBaby = new Play(5);
        var grandadNeedsSomeRest = new Sleep(8);
        var rememberOldTimes = new RememberGoodTimes(10);

        /* Activities are passed to the person...*/
        var grandad = new Grandad("Billy Herrington",
                coffee3000,
                grandadNeedsSomeRest,
                repairKit,
                watchTV,
                grandadNeedsSomeRest,
                rememberOldTimes
        );

        var father = new Father("Van Darkholme",
                coffee3000,
                repairKit,
                bikeRound,
                restAtCouch,
                watchTV,
                watchTV,
                watchTV,
                coffee3000
        );

        var mom = new Mom("Dungeon master",
                bikeRound,
                coffee3000,
                bikeRound,
                bikeRound,
                coffee3000,
                restAtCouch
        );

        var babyBoy = new Baby("Slave",
                sleepBaby, playBaby
        );

        mom.addBabies(babyBoy);

        /* Mom can respond to events generated by babies. */
        //mom.addBabies(babyBoy);

        /* Builders are provided for structures of house: rooms, floors and co on... */
        var kitchen = new RoomBuilder()
                .setName("Kitchen")
                .setActivityAll(
                    playBaby,
                    sleepBaby,
                    coffee3000,
                    repairKit
                )
                .setEntityAll(
                    grandad, father, mom, babyBoy
                )
                .getResult();

        var grandadMemorialRoom = new RoomBuilder()
                .setName("Hall of grandad's fame")
                .setActivity(rememberOldTimes)
                .getResult();

        var coffin = new RoomBuilder()
                .setName("Coffin")
                .setActivity(grandadNeedsSomeRest)
                .getResult();

        var floor = new FloorBuilder()
                .setFloorNumber(1)
                .addRoomAll(kitchen, coffin, grandadMemorialRoom)
                .initRooms()
                .getResult();

        var windows = new Window();
        var lights = new Light();
        var humidifier = new Humidifier();

        /*
            Sensors are EventManagers, that are responding to context changes.
            For example, we can subscribe window for changing light level.
            Based on light level window can change its internal state...
         */
        var sunSensor = new SunSensor("LightUp", "LightDown");
        sunSensor.subscribe("LightUp", windows, lights);
        sunSensor.subscribe("LightDown", windows, lights);

        var oxygenSensor = new OxygenSensor("OxygenLow", "OxygenHigh");
        oxygenSensor.subscribe("OxygenLow", windows);
        oxygenSensor.subscribe("OxygenHigh", windows);

        var humiditySensor = new HumiditySensor("AirIsDry", "AirIsWet");
        humiditySensor.subscribe("AirIsDry", humidifier);
        humiditySensor.subscribe("AirIsWet", humidifier);

        // var insideTempSensor = new TempSensor("ItsCold", "ItsWarm");
        // insideTempSensor.subscribe("ItsCold", father);
        // insideTempSensor.subscribe("ItsWarm", father);

        var house = new HouseBuilder()
                .setAddress("Street Lane 69")
                .addFloorAll(floor)
                .initFloors()
                .addSensors(sunSensor, oxygenSensor, humiditySensor)
                .getResult();

        /*
            World Class is a wrapper around house class to provide different simulations...
         */
        World w1 = new World(house);
        w1.startSimulation(40);

        /*
            Reports are used to deliver different info based on the demand;
         */
        var reports = Context.getReports();
        System.out.println();
        reports.getActivityReporter().EntityToActivityMapping();
        System.out.println();
        reports.getEventReport().eventsBySource();
        System.out.println();
        reports.getHouseConfigurationReport().getConfiguration();
        System.out.println();
        reports.getConsumptionReport().getAllConsumptions();
        System.out.println();
    }
}
